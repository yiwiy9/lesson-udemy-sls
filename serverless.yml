service: udemy-sls-intro

frameworkVersion: '3'

plugins:
  - serverless-python-requirements

package:
  individually: true
  patterns:
    - '!./**'
    - src/models/**

custom:
  dynamodb_table: ${self:provider.stage}-compare-yourself

provider:
  name: aws
  runtime: python3.9      # 最新ver
  stage: dev              # devで固定
  region: ap-northeast-1  # 東京リージョン
  architecture: arm64     # AWS Graviton2 processor（安くて速いらしい）
  memorySize: 128         # 最小（MB）
  timeout: 6              # デフォルト（seconds）
  versionFunctions: false # バージョン管理しない
  environment:            # Lambda で使用する環境変数
    DYNAMODB_TABLE: ${self:custom.dynamodb_table}
    DYNAMODB_HOST: https://dynamodb.${self:provider.region}.amazonaws.com
    REGION: ${self:provider.region}
  httpApi:
    cors: true            # CORS の許可
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.dynamodb_table}

functions:
  cy-store-data:
    handler: src/functions/store.handler
    package:
      patterns:
        - src/functions/store.py
    events:
      - httpApi:
          method: POST
          path: /compare-yourself
  cy-delete-data:
    handler: src/functions/delete.handler
    package:
      patterns:
        - src/functions/delete.py
    events:
      - httpApi:
          method: DELETE
          path: /compare-yourself
  cy-get-data:
    handler: src/functions/get.handler
    package:
      patterns:
        - src/functions/get.py
    events:
      - httpApi:
          method: GET
          path: /compare-yourself/{type}

resources:
  Resources:
    CYDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete # CloudFormation Stack が削除されたら削除する（残す場合は、`Retain`）
      Properties:
        AttributeDefinitions:
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.dynamodb_table}
